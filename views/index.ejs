<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Chat APP</title>


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link
    href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500&family=Noto+Sans+JP:wght@300&family=Plus+Jakarta+Sans:wght@800&family=Poppins:wght@300&family=Rubik+Doodle+Triangles&display=swap"
    rel="stylesheet" />


  <link rel="stylesheet" href="/css/style.css">

</head>

<body>


  <div class="entiredata position-relative">

    <h5 class="text-center notedata bg-white p-2 position-absolute w-100 mt-0">
      <span class="text-danger">Note:</span> please open the same url in another tab for realtime chat expereince

    </h5>



    <div class="messagedata ">

      <div class="left-container">



        <div class="chats">






        </div>


        <div class="inputs">
          <input type="text" class="textvalue" />
          <button class="btn  sendbutton btn-primary btn-lg">Send</button>
        </div>
      </div>






      <div class="right-container">
        <h2 class="text-center mt-5 mb-3 text-danger usersonlinetext">Users Online <i
            class="fa-solid fa-globe ms-2 text-primary"></i></h2>
        <div class="usersconnected  d-flex align-items-center flex-column">

        </div>
      </div>
    </div>



  </div>





  <!-- <script src="https://chat-app-t8d1.onrender.com/socket.io/socket.io.js"></script> -->

  <script src="https://live-chat-app-mocha.vercel.app/socket.io/socket.io.js"></script>

  <!-- <script src="live-chat-app-gray.vercel.app/socket.io/socket.io.js"></script> -->











  <script>





    const socket = io.connect("https://live-chat-app-mocha.vercel.app/");

    // const socket = io.connect("live-chat-app-gray.vercel.app")



    // const socket = io.connect("https://chat-app-t8d1.onrender.com");






    setTimeout(function () {
      document.querySelector(".notedata").style.display = "none";
    }, 5000);

    const textvalue = document.querySelector(".textvalue");
    const listdata = document.querySelector(".chats");
    const sendbutton = document.querySelector(".sendbutton");
    const usersconnected = document.querySelector(".usersconnected");

    const username = prompt("Enter your username");

    if (username == undefined || username.length == 0) {
      window.location.reload();
    }

    socket.on("previousdata", (data) => {
      data.forEach((data) => {
        const leftdata = ` 
    <div class="leftside-chat_section">


        <img src="images/thumbnail_2d969cb6e84f_2x.webp" height="50px" width="50px"
            class="rounded-5 " alt="" />

        <div class="chatandtime">


            <div class="chatandtimeleft">

                <div class=" d-flex justify-content-start">
                    <p class="text-success usernameinchat">${data.username}</p>
                </div>


                <p class="leftside_chat text-start m-0">
                    ${data.message}
                </p>

                <div class="d-flex justify-content-end">
                    <p class="m-0 time ">${data.time}</p>

                </div>

            </div>


        </div>
    </div>`;

        listdata.innerHTML += leftdata;

        listdata.scrollTop = listdata.scrollHeight;
      });
    });

    socket.emit("adduser", username);

    document.querySelector(".textvalue").addEventListener("keydown", (e) => {
      if (e.key == "Enter" && textvalue.value.trim().length > 0) {
        chatdata();
      }
    });

    document.querySelector(".sendbutton").addEventListener("click", () => {
      if (textvalue.value.trim().length > 0) {
        chatdata();
      }
    });

    function chatdata() {
      const inputvalue = textvalue.value;

      const date = new Date();
      let hours = date.getHours();
      let minutes = date.getMinutes();
      let meridiem = "AM";

      if (hours > 12) {
        hours -= 12;
        meridiem = "PM";
      } else if (hours === 0) {
        hours = 12;
      }
      hours = hours.toString().padStart(2, "0");

      minutes = minutes.toString().padStart(2, "0");

      const rightdata = `   <div class="rightsidechat_section">
<div class="chatandtime">
    <div class="chatandtimeright">



        <div class=" d-flex justify-content-end">
            <p class="text-success usernameinchat">${username}</p>

        </div>


        <p class="rightside_chat text-start m-0">
            ${textvalue.value}
        </p>

        <div class="d-flex justify-content-start">

            <p class="m-0 text-end time ">${hours + ":" + minutes + " " + meridiem
        }</p>
        </div>

    </div>

</div>

<img src="images/thumbnail_2d969cb6e84f_2x.webp" height="50px" width="50px"
    class="rounded-5 " alt="" />
</div>`;

      listdata.innerHTML += rightdata;

      listdata.scrollTop = listdata.scrollHeight;

      const entiretimeandmessage = [hours, minutes, inputvalue, username];

      socket.emit("message", entiretimeandmessage);

      textvalue.value = "";
    }

    socket.on("broadcastmessage", (data) => {
      const receivedatata = data;

      console.log(receivedatata);

      const leftdata = ` 
    <div class="leftside-chat_section">


        <img src="images/thumbnail_2d969cb6e84f_2x.webp" height="50px" width="50px"
            class="rounded-5 " alt="" />

        <div class="chatandtime">


            <div class="chatandtimeleft">

                <div class=" d-flex justify-content-start">
                    <p class="text-success usernameinchat">${receivedatata[3]}</p>
                </div>


                <p class="leftside_chat text-start m-0">
                    ${receivedatata[2]}
                </p>

                <div class="d-flex justify-content-end">
                    <p class="m-0 time ">${receivedatata[0]}:${receivedatata[1]}</p>

                </div>

            </div>


        </div>
    </div>`;

      listdata.innerHTML += leftdata;

      listdata.scrollTop = listdata.scrollHeight;
    });

    socket.on("updateUserList", (onlineusers) => {
      usersconnected.innerHTML = " ";

      onlineusers.forEach((e) => {
        const createonlineusersadata = document.createElement("button");
        createonlineusersadata.className =
          "btn btn-success btn-md w-50 mb-4  text-capitalize";
        createonlineusersadata.textContent = e;

        usersconnected.appendChild(createonlineusersadata);
      });
    });


  </script>



  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
    integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
    crossorigin="anonymous"></script>
</body>

</html>